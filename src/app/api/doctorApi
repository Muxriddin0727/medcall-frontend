import axios from "axios";
import assert from "assert";
import { serverApi } from "../../lib/config";
import { Definer } from "../../lib/Definer";
import { FindDoctors } from "../../types/user";
import { SearchObj } from "../../types/others";

class DoctorApi {
  private readonly path: string;

  constructor() {
    this.path = serverApi;
  }

  async getTopDoctors() {
    try {
      const url = "/find-doctors?order=top&page=1&limit=6",
        result = await axios.get(this.path + url, { withCredentials: true });
        assert.ok(result?.data, Definer.general_err1);
        assert.ok(result?.data?.state != "fail", result?.data?.message);
        console.log("state:", result.data.state);
      const top_doctors: FindDoctors[] = result.data.data;
      return top_doctors;
    } catch (err: any) {
      console.log(`ERROR::: getTopDoctors ${err.message}`);
      throw err;
    }
  }

  async getDoctors(data: SearchObj) {
    try {
      const url = `/find-doctors?order=${data.order}&page=${data.page}&limit=${data.limit}`,
        result = await axios.get(this.path + url, { withCredentials: true });
        assert.ok(result?.data, Definer.general_err1);
        assert.ok(result?.data?.state != "fail", result?.data?.message);
        console.log("state:", result.data.state);
      const doctors: FindDoctors[] = result.data.data;
      return doctors;
    } catch (err: any) {
      console.log(`ERROR::: getDoctors ${err.message}`);
      throw err;
    }
  }

  async getChosenDoctor (id: string) {
    try {
      const url  = `/find-doctors/${id}`,
        result = await axios.get(this.path + url, {withCredentials:true});
        assert.ok(result?.data, Definer.general_err1);
        assert.ok(result?.data?.state != "fail", result?.data?.message);
        console.log("state:", result.data.state);
        const doctor: FindDoctors = result.data.data;
        return doctor;
    }  catch (err:any) {
      console.log(`ERROR ::: getChosenDoctor ${err.message}`);
      throw err;
    }
  }
}

export default DoctorApi;